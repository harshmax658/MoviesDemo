{"version":3,"sources":["Redux/actions/action.js","components/MoviesCard/Card.jsx","components/MoviesCard/MovieCard.jsx","components/NavBar/NavBar.jsx","components/MoviesDetailModel/MoviesDetail.jsx","App.js","Redux/reducers/MoviesData.js","Redux/reducers/MovieDetail.js","Redux/reducers/rootReducer.js","Redux/Store.js","index.js"],"names":["FETCH_MOVIES","ADD_MOVIE_AS_FAVOURITE","REMOVE_MOVIE_FROM_FAVOURITE","GET_MOVIE_DETAIL","CANCEL_MOVIE_DETAIL_PREVIEW","SHOW_FAVOURITE","fetchMovies","data","type","MovieDetail","Card","values","movieDetail","useState","fav","setFav","FavHandle","dispatch","useDispatch","favMovieHandler","addFavMovie","removefromFav","removeFromFav","poster_path","original_title","release_date","className","onClick","src","alt","tooltip","style","color","backgroundColor","borderRadius","MovieCard","movies","isFav","api","a","axios","fetchData","console","log","CallApi","getMovieDetail","id","length","map","NavBar","setMovieHandler","cursor","MoviesDetail","state","useSelector","movieData","backdrop_path","overview","tagline","vote_count","genres","runtime","backgroundImage","name","App","MoviesData","favouriteMovieList","movi","setmovies","moviesDetail","useEffect","results","setTimeout","showFavourite","isMovieData","inititalState","movie","action","rootReducer","combineReducers","newfavList","filter","val","store","createStore","applyMiddleware","getState","next","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.158ff590.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const FETCH_MOVIES = \"FETCH_MOVIES\";\r\nexport const ADD_MOVIE_AS_FAVOURITE = \"ADD_MOVIE_AS_FAVOURITE\";\r\nexport const REMOVE_MOVIE_FROM_FAVOURITE = \"REMOVE_MOVIE_FROM_FAVOURITE\";\r\nexport const GET_MOVIE_DETAIL = \"GET_MOVIE_DETAIL\";\r\nexport const CANCEL_MOVIE_DETAIL_PREVIEW = \"CANCEL_MOVIE_DETAIL_PREVIEW\";\r\nexport const SHOW_FAVOURITE = \"SHOW_FAVOURITE\";\r\n\r\nexport const handleFetchMovies = () => {\r\n  let api = `https://api.themoviedb.org/3/movie/popular?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US&page=3`;\r\n  return (dispatch) => {\r\n    const CallApi = async () => {\r\n      try {\r\n        let fetchData = await axios(api);\r\n        // console.log();\r\n        dispatch(fetchMovies(fetchData.data.results));\r\n      } catch (e) {\r\n        console.log(\"error\", e);\r\n      }\r\n    };\r\n    CallApi();\r\n  };\r\n};\r\nexport const fetchMovies = (data) => {\r\n  return {\r\n    type: FETCH_MOVIES,\r\n    data,\r\n  };\r\n};\r\nexport const addFavMovie = (data) => {\r\n  return {\r\n    type: ADD_MOVIE_AS_FAVOURITE,\r\n    data,\r\n  };\r\n};\r\nexport const removeFromFav = (data) => {\r\n  return {\r\n    type: REMOVE_MOVIE_FROM_FAVOURITE,\r\n    data,\r\n  };\r\n};\r\nexport const getMovieDetail = (data) => {\r\n  let api = `\r\n  https://api.themoviedb.org/3/movie/${data}?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US`;\r\n  return (dispatch) => {\r\n    const CallApi = async () => {\r\n      try {\r\n        let fetchData = await axios(api);\r\n\r\n        dispatch(MovieDetail(fetchData.data));\r\n      } catch (e) {\r\n        console.log(\"error\", e);\r\n      }\r\n    };\r\n    CallApi();\r\n  };\r\n};\r\nexport const MovieDetail = (data) => {\r\n  return {\r\n    type: GET_MOVIE_DETAIL,\r\n    data,\r\n  };\r\n};\r\nexport const cancelMoviePreview = (data) => {\r\n  return {\r\n    type: CANCEL_MOVIE_DETAIL_PREVIEW,\r\n  };\r\n};\r\nexport const showFavourite = (data) => {\r\n  return {\r\n    type: SHOW_FAVOURITE,\r\n    data,\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { MdFavoriteBorder, MdFavorite } from \"react-icons/md\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addFavMovie, removeFromFav } from \"../../Redux/actions/action\";\r\n\r\nconst Card = ({ values, movieDetail }) => {\r\n  const [fav, setFav] = useState(false);\r\n\r\n  const FavHandle = () => {\r\n    if (fav === false) {\r\n      setFav(true);\r\n    } else {\r\n      setFav(false);\r\n    }\r\n  };\r\n  const dispatch = useDispatch();\r\n  const favMovieHandler = (data) => {\r\n    dispatch(addFavMovie(data));\r\n    FavHandle();\r\n  };\r\n  const removefromFav = (data) => {\r\n    dispatch(removeFromFav(data));\r\n    FavHandle();\r\n  };\r\n  const { poster_path, original_title, release_date } = values;\r\n\r\n  return (\r\n    <div className={`card ${fav ? \"favCard\" : \"\"} `}>\r\n      <div className=\"Movie_Poster\">\r\n        <div className=\"poster\" onClick={() => movieDetail(values)}>\r\n          <img\r\n            src={`https://www.themoviedb.org/t/p/w600_and_h900_bestv2/${poster_path}`}\r\n            alt=\"Movie Poster\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"details\">\r\n        <div>\r\n          <p className=\"MovieTitle\">{original_title}</p>\r\n          <p className=\"date\">{release_date}</p>\r\n        </div>\r\n        <div className=\"Fav\">\r\n          {fav ? (\r\n            <MdFavorite\r\n              onClick={() => {\r\n                removefromFav(values);\r\n              }}\r\n              tooltip=\"r\"\r\n              style={{\r\n                color: \"red\",\r\n                backgroundColor: \"#a9c4ff\",\r\n                borderRadius: \"50%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <MdFavoriteBorder\r\n              onClick={() => {\r\n                favMovieHandler(values);\r\n              }}\r\n              style={{\r\n                color: \"white\",\r\n                backgroundColor: \"#a9c4ff\",\r\n                borderRadius: \"50%\",\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport \"./MoviesCard.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getMovieDetail } from \"../../Redux/actions/action\";\r\n\r\nconst MovieCard = ({ movies, isFav }) => {\r\n  const dispatch = useDispatch();\r\n  const movieDetail = (data) => {\r\n    dispatch(getMovieDetail(data.id));\r\n  };\r\n  return (\r\n    <>\r\n      <h2 id=\"heading\">{isFav ? \"Favourites Movies\" : \"Popular Movies\"}</h2>\r\n      <hr />\r\n      <section className=\"MoviesCard\">\r\n        {movies.length > 0\r\n          ? movies.map((values) => (\r\n              <Card key={values.id} values={values} movieDetail={movieDetail} />\r\n            ))\r\n          : \"No movies to display!!\"}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React from \"react\";\r\n\r\nimport \"./NavBar.css\";\r\nconst NavBar = ({ setMovieHandler }) => {\r\n  return (\r\n    <>\r\n      <header className=\"header\">\r\n        <nav className=\"NavBar\">\r\n          <div className=\"heading\">\r\n            <h1>Prime Videos</h1>\r\n          </div>\r\n          <div className=\"MenuList\">\r\n            <ul>\r\n              <li></li>\r\n              <li\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => setMovieHandler(false)}\r\n              >\r\n                Home\r\n              </li>\r\n              <li\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => setMovieHandler(true)}\r\n              >\r\n                Favourite\r\n              </li>\r\n              <li>Sign In</li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport \"./MoviesDetail.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { cancelMoviePreview } from \"../../Redux/actions/action\";\r\n\r\nconst MoviesDetail = () => {\r\n  const state = useSelector((state) => state.MovieDetail);\r\n  const dispatch = useDispatch();\r\n  const {\r\n    backdrop_path,\r\n    poster_path,\r\n    original_title,\r\n    overview,\r\n    tagline,\r\n    vote_count,\r\n    genres,\r\n    runtime,\r\n  } = state.movieData;\r\n  const homePage = () => {\r\n    dispatch(cancelMoviePreview());\r\n  };\r\n  return (\r\n    <>\r\n      <section className=\"movieDetails\">\r\n        <section\r\n          className=\"backGround\"\r\n          style={{\r\n            backgroundImage: `url(\r\n                  https://www.themoviedb.org/t/p/w600_and_h900_bestv2/${backdrop_path}\r\n                  ) `,\r\n          }}\r\n        ></section>\r\n        <div className=\"close\">\r\n          <h2>\r\n            <button onClick={homePage}>Close</button>\r\n          </h2>\r\n        </div>\r\n        <div className=\"dataContainer\">\r\n          <div className=\"logo\">\r\n            <img\r\n              src={`https://www.themoviedb.org/t/p/w600_and_h900_bestv2/${poster_path}`}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <div className=\"detailsView\">\r\n            <h2 className=\"title\">{original_title}</h2>\r\n            <div className=\"votes\">\r\n              <div id=\"userVote\">\r\n                <p className=\"vote\">{`Vote Count:${vote_count}`}</p>\r\n              </div>\r\n              <p> Duration : {runtime}m</p>\r\n\r\n              <div id=\"genere\">\r\n                Genres:\r\n                {genres.map((data) => (\r\n                  <p key={data.name + 21}>{`${data.name}|`}</p>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <p className=\"tagline\">{tagline}</p>\r\n            <div className=\"overView\">\r\n              <h3>OverView</h3>\r\n              <p>{overview}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviesDetail;\r\n","import React, { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport MovieCard from \"./components/MoviesCard/MovieCard\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport { handleFetchMovies, showFavourite } from \"./Redux/actions/action\";\nimport MoviesDetail from \"./components/MoviesDetailModel/MoviesDetail\";\n\nconst App = () => {\n  const state = useSelector((state) => state.MoviesData);\n  const { movies, favouriteMovieList, isFav } = state;\n  const [movi, setmovies] = useState(movies);\n  const [fav, setFav] = useState(true);\n  const moviesDetail = useSelector((state) => state.MovieDetail);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(handleFetchMovies());\n  }, [dispatch]);\n\n  useEffect(() => {\n    isFav ? setmovies(favouriteMovieList) : setmovies(movies);\n    setTimeout(() => {\n      setFav(false);\n    }, 500);\n  }, [isFav, movies, favouriteMovieList, dispatch]);\n\n  const setMovieHandler = (data) => {\n    dispatch(showFavourite(data));\n  };\n\n  return (\n    <>\n      <NavBar setMovieHandler={setMovieHandler} />\n      {fav ? (\n        \"Loading Data\"\n      ) : moviesDetail.isMovieData ? (\n        <MoviesDetail />\n      ) : (\n        <MovieCard movies={movi} fav={fav} isFav={isFav} />\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import {\r\n  FETCH_MOVIES,\r\n  ADD_MOVIE_AS_FAVOURITE,\r\n  REMOVE_MOVIE_FROM_FAVOURITE,\r\n  SHOW_FAVOURITE,\r\n} from \"../actions/action\";\r\nconst inititalState = {\r\n  movies: [],\r\n  favouriteMovieList: [],\r\n  isFav: false,\r\n};\r\n\r\nconst MoviesData = (state = inititalState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_MOVIES: {\r\n      return { ...state, movies: action.data };\r\n    }\r\n    case ADD_MOVIE_AS_FAVOURITE: {\r\n      return {\r\n        ...state,\r\n        favouriteMovieList: [...state.favouriteMovieList, action.data],\r\n      };\r\n    }\r\n    case REMOVE_MOVIE_FROM_FAVOURITE: {\r\n      let newfavList = state.favouriteMovieList.filter((val) => {\r\n        return val !== action.data;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        favouriteMovieList: newfavList,\r\n      };\r\n    }\r\n    case SHOW_FAVOURITE: {\r\n      return {\r\n        ...state,\r\n        isFav: action.data,\r\n      };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport { MoviesData };\r\n","import {\r\n  GET_MOVIE_DETAIL,\r\n  CANCEL_MOVIE_DETAIL_PREVIEW,\r\n} from \"../actions/action\";\r\n\r\nlet movie = {\r\n  movieData: {},\r\n  isMovieData: false,\r\n};\r\n\r\nconst MovieDetail = (state = movie, action) => {\r\n  switch (action.type) {\r\n    case GET_MOVIE_DETAIL: {\r\n      return { ...state, movieData: action.data, isMovieData: true };\r\n    }\r\n    case CANCEL_MOVIE_DETAIL_PREVIEW: {\r\n      return {\r\n        ...state,\r\n        isMovieData: false,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\nexport default MovieDetail;\r\n","import { combineReducers } from \"redux\";\r\nimport { MoviesData } from \"./MoviesData\";\r\nimport MovieDetail from \"./MovieDetail\";\r\n\r\nconst rootReducer = combineReducers({\r\n  MoviesData,\r\n  MovieDetail,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst thunk =\r\n  ({ dispatch, getState }) =>\r\n  (next) =>\r\n  (action) => {\r\n    if (typeof action === \"function\") {\r\n      action(dispatch);\r\n      return;\r\n    }\r\n    next(action);\r\n  };\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./Redux/Store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}